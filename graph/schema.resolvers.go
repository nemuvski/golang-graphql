package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"golang-graphql/graph/model"
	"golang-graphql/utils"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (res *model.Todo, err error) {
	res = &model.Todo{
		ID: utils.GenerateULID(),
		Text: input.Text,
		User: &model.User{
			ID: input.UserID,
			Name: "user " + input.UserID,
		},
	}
	err = nil
	return
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) (res []*model.Todo, err error) {
	res = []*model.Todo{
		{ ID: utils.GenerateULID(), Text: "todo 1", Done: false, User: &model.User{ID: "1", Name: "user 1"} },
		{ ID: utils.GenerateULID(), Text: "todo 2", Done: true, User: &model.User{ID: "1", Name: "user 1"} },
	}
	err = nil
	return
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
